{
  "openapi": "3.0.0",
  "info": {
    "title": "Your API",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "This endpoint registers a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authenticate a user",
        "description": "This endpoint authenticates a user using their username and password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username/password"
          }
        }
      }
    },
    "/carts/{cartId}": {
      "get": {
        "tags": ["Carts"],
        "summary": "Get a cart by ID",
        "description": "This endpoint retrieves a cart by its ID.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "ID of the cart to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        }
      },
      "delete": {
        "tags": ["Carts"],
        "summary": "Archive a cart",
        "description": "This endpoint archives a cart by its ID.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "ID of the cart to archive",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cart archived successfully"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/carts": {
      "post": {
        "tags": ["Carts"],
        "summary": "Create a new cart",
        "description": "This endpoint creates a new cart for a user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer"
                  }
                },
                "required": ["userId"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Cart created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error creating cart"
          }
        }
      }
    },
    "/carts/{cartId}/add-product/{productId}": {
      "post": {
        "tags": ["Carts"],
        "summary": "Add a product to a cart",
        "description": "This endpoint adds a product to a cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "ID of the cart",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to add",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error adding product to cart"
          }
        }
      }
    },
    "/inventory/{productId}": {
      "get": {
        "tags": ["ProductItem"],
        "summary": "Get a product in inventory by ID",
        "description": "This endpoint retrieves a product in inventory by its ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "post": {
        "tags": ["ProductItem"],
        "summary": "Create a product in inventory",
        "description": "This endpoint creates a product in inventory.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductInventoryCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error creating product"
          }
        }
      }
    },
    "/inventory/{productId}/add-to-cart/{cartId}": {
      "post": {
        "tags": ["ProductItem"],
        "summary": "Add a product to a cart",
        "description": "This endpoint adds a product to a cart.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "ID of the cart",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error adding product to cart"
          }
        }
      }
    },
    "/inventory/{productId}/remove-from-cart": {
      "post": {
        "tags": ["ProductItem"],
        "summary": "Remove a product from a cart",
        "description": "This endpoint removes a product from a cart.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product removed from cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error removing product from cart"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "This endpoint retrieves all products.",
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "This endpoint creates a new product.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error creating product"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get a product by ID",
        "description": "This endpoint retrieves a product by its ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["username", "password"]
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["username", "password"]
      },
      "IProductInventoryCreateDTO": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer"
          },
          "amount": {
            "type": "integer"
          }
        },
        "required": ["productId", "amount"]
      },
      "StandardApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": true
          },
          "isSuccess": {
            "type": "boolean"
          }
        },
        "required": ["data", "isSuccess"]
      },
      "IProductCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "price": {
            "type": "number",
            "description": "Price of the product"
          },
          "amount": {
            "type": "number",
            "description": "amount of items to create"
          }
        },
        "required": ["name", "price", "amount"]
      }
    }
  }
}
